#
# CMakeLists.txt  top-level cmake file for deltafs-preload
# 09-Dec-2016  chuck@ece.cmu.edu
#

#
#  general cmake flags:
#    -DCMAKE_INSTALL_PREFIX=/usr/local     -- the prefix for installing
#    -DCMAKE_BUILD_TYPE=type               -- type can be DEBUG, RELEASE, ...
#    -DCMAKE_PREFIX_PATH=/dir              -- external packages
#    -DBUILD_TOOLS=NO                      -- build tools
#
#     note that CMAKE_PREFIX_PATH can be a list of directories:
#      -DCMAKE_PREFIX_PATH='/dir1;/dir2;/dir3'
#

#
# debugging options for testing:
#    -DSHUFFLE_BYPASS=OFF
#    -DPLFS_DIRMODE_BYPASS=OFF
#

cmake_minimum_required (VERSION 3.0)
project (deltafs-bb C CXX)
enable_testing ()

# link shared lib with full rpath
set (CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

# preload library is always shared, force on and hide it as an advanced var
set (BUILD_SHARED_LIBS On CACHE STRING "Build shared libs (must be on)." FORCE)
mark_as_advanced (BUILD_SHARED_LIBS)

# setup cache variables for ccmake
if (NOT CMAKE_BUILD_TYPE)
    set (CMAKE_BUILD_TYPE Release
         CACHE STRING "Choose the type of build." FORCE)
    set_property (CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS 
                  "Debug" "Release" "RelWithDebInfo" "MinSizeRel")
endif ()
set (DEBUG_SANITIZER Off CACHE STRING "Sanitizer for debug builds")
set_property (CACHE DEBUG_SANITIZER PROPERTY STRINGS
              "Off" "Address" "Thread")
set (CMAKE_PREFIX_PATH "" CACHE STRING "External dependencies path")

#set (PLFS_DIRMODE_BYPASS Off CACHE BOOL "Bypass deltafs PLFS mode for mkdir")
#set (SHUFFLE_BYPASS Off CACHE BOOL "Bypass shuffle module")

#
# sanitizer config (XXX: does not probe compiler to see if sanitizer flags
# are supported... )
#
set (as_flags "-fsanitize=address -O1 -fno-omit-frame-pointer")
set (ts_flags "-fsanitize=thread  -O1 -fno-omit-frame-pointer")
if (${CMAKE_BUILD_TYPE} STREQUAL "Debug")
    if (${DEBUG_SANITIZER} STREQUAL "Address")
        set (CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} ${as_flags}")
        set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} ${as_flags}")
    elseif (${DEBUG_SANITIZER} STREQUAL "Thread")
        set (CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} ${ts_flags}")
        set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} ${ts_flags}")
    endif ()
endif ()

# user hook to build tools
set (BUILD_TOOLS "OFF" CACHE BOOL "Build tools")

# deltafs is required
find_package (deltafs REQUIRED)

# mercury is required
find_package (MERCURY REQUIRED)

# pdlfs-common is required
find_package (PDLFS-COMMON REQUIRED)

add_subdirectory (src)
#add_subdirectory (tests)
if (BUILD_TOOLS)
    add_subdirectory (tools)
endif ()
